from flask import Flask, request, jsonify
from flask_cors import CORS
import firebase_admin
from firebase_admin import credentials, firestore
import requests
import uuid
from datetime import datetime
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firebase
try:
    cred = credentials.Certificate("firebase-key.json")
    firebase_admin.initialize_app(cred)
    db = firestore.client()
    print("‚úÖ Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω!")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ Firebase: {e}")

app = Flask(__name__)
CORS(app)  # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ CORS –∑–∞–ø—Ä–æ—Å—ã

# –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç
@app.route('/test', methods=['GET'])
def test():
    return jsonify({'message': '–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!', 'status': 'ok'})

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
@app.route('/upload', methods=['POST'])
def upload_photo():
    try:
        print("üì® –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª
        if 'photo' not in request.files:
            print("‚ùå –ù–µ—Ç —Ñ–∞–π–ª–∞ –≤ –∑–∞–ø—Ä–æ—Å–µ")
            return jsonify({'error': 'No photo file'}), 400
        
        photo = request.files['photo']
        user_id = request.form.get('userId')
        
        print(f"üì∏ –§–∞–π–ª: {photo.filename}, User: {user_id}")
        
        if photo.filename == '':
            return jsonify({'error': 'No selected file'}), 400
        
        # –í—Ä–µ–º–µ–Ω–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—Ö –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏
        photo_id = str(uuid.uuid4())
        photo_data = {
            'id': photo_id,
            'user_id': user_id,
            'photo_url': 'https://via.placeholder.com/500x500?text=Photo+Placeholder',
            'timestamp': datetime.now().isoformat(),
            'total_ratings': 0,
            'average_rating': 0,
            'status': 'active'
        }
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Firebase
        try:
            db.collection('photos').document(photo_id).set(photo_data)
            print("‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Firestore")
        except Exception as firestore_error:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ Firestore: {firestore_error}")
            # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –¥–∞–∂–µ –±–µ–∑ Firestore
        
        return jsonify({
            'success': True,
            'photo': photo_data,
            'message': '–§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ (—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)'
        })
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ upload: {e}")
        return jsonify({'error': str(e)}), 500

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ
@app.route('/get_photo', methods=['GET'])
def get_photo():
    try:
        print("üîÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ")
        
        # –¢–µ—Å—Ç–æ–≤–æ–µ —Ñ–æ—Ç–æ
        test_photo = {
            'id': 'test-photo-123',
            'user_id': 'test-user',
            'photo_url': 'https://via.placeholder.com/500x500?text=Test+Photo',
            'timestamp': datetime.now().isoformat(),
            'total_ratings': 42,
            'average_rating': 8.5,
            'status': 'active'
        }
        
        return jsonify({
            'success': True,
            'photo': test_photo
        })
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ get_photo: {e}")
        return jsonify({'error': str(e)}), 500

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ—Ü–µ–Ω–∫–∏
@app.route('/rate', methods=['POST'])
def rate_photo():
    try:
        print("‚≠ê –ü–æ–ª—É—á–µ–Ω–∞ –æ—Ü–µ–Ω–∫–∞")
        data = request.json
        print(f"–î–∞–Ω–Ω—ã–µ: {data}")
        
        return jsonify({
            'success': True,
            'message': '–û—Ü–µ–Ω–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!'
        })
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ rate: {e}")
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ http://localhost:5000")
    app.run(host='0.0.0.0', port=5000, debug=True, use_reloader=False)